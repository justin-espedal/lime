name: CI

on: [push, pull_request]

jobs:

  build:

    strategy:
      matrix:
        haxe-version: [4.1.1]
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: haxeui/haxeui-core/.github/actions/haxe@master
      with:
        haxe-version: ${{ matrix.haxe-version }}
    - uses: actions/setup-java@v1
      with:
        java-version: 8

    - name: Install Haxelib dependencies
      run: |
        haxelib install hxcpp 4.0.64 --quiet
        haxelib install format  --quiet
        haxelib install hxp  --quiet

    - name: Set ANDROID_NDK_ROOT (Linux)
      if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      run: echo "::set-env name=ANDROID_NDK_ROOT::$HOME/Library/lime-dependencies/android-ndk-r15c"

    - name: Install Linux dependencies
      if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      run: |
        sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev g++-multilib gcc-multilib libasound2-dev libx11-dev libxext-dev libxi-dev libxrandr-dev libxinerama-dev

    - name: Install Android NDK (Linux)
      if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      run: |
        mkdir -p $ANDROID_NDK_ROOT
        wget -O android-ndk.zip --quiet https://dl.google.com/android/repository/android-ndk-r15c-linux-x86_64.zip
        unzip -qq android-ndk.zip -d $ANDROID_NDK_ROOT/..
        rm android-ndk.zip

    - name: Configure HXCPP compilation (Linux and macOS)
      if: ${{ !startsWith(matrix.os, 'windows-') }}
      run: |
        cat << EOF > ~/.hxcpp_config.xml
        <xml>
          <section id="vars">
            <section if="HXCPP_COMPILE_CACHE_ENABLED">
              <set name="HXCPP_COMPILE_CACHE" value="~/hxcpp_cache"/>
              <set name="HXCPP_CACHE_MB" value="10240" />
            </section>
          </section>
          <section id="exes">
            <compiler>
              <flag value="-O0" />
            </compiler>
          </section>
        </xml>
        EOF

    - name: Configure HXCPP compilation (Windows)
      if: ${{ startsWith(matrix.os, 'windows-') }}
      run: |
        $HxcppConfig = @"
        <xml>
          <section id="vars">
            <section if="HXCPP_COMPILE_CACHE_ENABLED">
              <set name="HXCPP_COMPILE_CACHE" value="$Env:USERPROFILE\hxcpp_cache" />
              <set name="HXCPP_CACHE_MB" value="10240" />
            </section>
          </section>
          <section id="exes">
            <compiler if="isMsvc">
              <flag value="/Od" />
            </compiler>
            <compiler unless="isMsvc">
              <flag value="-O0" />
            </compiler>
          </section>
        </xml>
        "@
        echo $HxcppConfig > ~\.hxcpp_config.xml

    - name: Install "lime" command alias (Linux and macOS)
      if: ${{ !startsWith(matrix.os, 'windows-') }}
      run: |
        haxelib dev lime $GITHUB_WORKSPACE
        haxelib run lime setup -alias -y

    - name: Install "lime" command alias (Windows)
      if: ${{ startsWith(matrix.os, 'windows-') }}
      run: |
        haxelib dev lime $Env:GITHUB_WORKSPACE
        haxelib run lime setup -alias -y

    - name: Configure Lime for Android (Linux)
      if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      run: |
        lime config ANDROID_SDK $ANDROID_HOME
        haxelib run lime config ANDROID_NDK_ROOT $ANDROID_NDK_ROOT
        haxelib run lime config JAVA_HOME $JAVA_HOME
        haxelib run lime config ANDROID_SETUP true
        haxelib run lime config

    - name: Rebuild Lime Tools
      run: |
        lime rebuild tools -nocolor -verbose

    - name: Rebuild Lime (HashLink)
      run: |
        lime rebuild hl -release -verbose -nocolor

    - name: Rebuild Lime (Android)
      if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      run: |
        lime rebuild android -release -verbose -nocolor

    - name: Rebuild Lime (iOS)
      if: ${{ startsWith(matrix.os, 'macos-') }}
      run: |
        lime rebuild ios -release -verbose -nocolor

    - name: Rebuild Lime (Linux)
      if: ${{ startsWith(matrix.os, 'ubuntu-') }}
      run: |
        lime rebuild linux -64 -release -verbose -nocolor
        lime rebuild linux -32 -release -verbose -nocolor

    - name: Rebuild Lime (macOS)
      if: ${{ startsWith(matrix.os, 'macos-') }}
      run: |
        lime rebuild mac -release -verbose -nocolor

    - name: Rebuild Lime (Windows)
      if: ${{ startsWith(matrix.os, 'windows-') }}
      run: |
        lime rebuild windows -32 -release -verbose -nocolor
        lime rebuild windows -64 -release -verbose -nocolor
